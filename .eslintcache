[{"/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/index.js":"1","/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/App.js":"2","/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/LoginForm.js":"3","/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/SignUpForm.js":"4","/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/NavBar.js":"5"},{"size":294,"mtime":1611801763976,"results":"6","hashOfConfig":"7"},{"size":378,"mtime":1611802053074,"results":"8","hashOfConfig":"7"},{"size":1204,"mtime":1611799250881,"results":"9","hashOfConfig":"7"},{"size":985,"mtime":1611799250882,"results":"10","hashOfConfig":"7"},{"size":915,"mtime":1611801209657,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4te6vj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/index.js",[],["24","25"],"/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/App.js",[],"/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/LoginForm.js",["26","27"],"import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios'\n\nconst LoginForm = () => {\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  })\n\nconst onChangeHandler = (e) => {\nconsole.log(e.target.value);\nsetCredentials({\n  ...credentials,\n  [e.target.name]: e.target.value\n})\n}\n\nconst onSubmitHandler = (e) => {\ne.preventDefault()\nconsole.log('submitted!');\n// axios.post('', credentials)\n// .then((res) => {\n//   console.log(res);\n//   localStorage.setItem('token', res.data.payload)\n// })\n// .catch(err => console.log(err))\n}\n\n  return (\n    <Form onSubmit={onSubmitHandler}>\n          <FormGroup>\n        <Label for=\"username\">Username</Label>\n        <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"enter your username\" onChange={onChangeHandler}/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Password</Label>\n        <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"enter your password\" onChange={onChangeHandler}/>\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n  )\n}\n\nexport default LoginForm","/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/SignUpForm.js",[],"/Users/whitebear/Sean/Lambda/Lambda_assignments/unit3/recipe-app-22/src/Components/NavBar.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":49,"nodeType":"34","messageId":"35","endLine":2,"endColumn":57},{"ruleId":"32","severity":1,"message":"36","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":13},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]